"""
Django settings for aprajitaretails project.
Version : 2.0.0

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/

        Aprajita Retails - Network Core
        Base Setting File
        Author: Amit Kumar (AKS Labs(India))
        Date: 15/02/2024
        Version: 2.0
        Notes: Change this file for your project if you know what you are doing
        Final Theme Select: Rocket Soft UI using Django Soft  UI Dashboard released version 1.6 django-admin-soft-dashboard
"
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-j-5)mv1!m@9zr7lwe7d+fh#ycy5a58tz(rh-*b#*h!x+7bpn9k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost",   ".deploypro.dev","152.67.78.183","aprajitaretails.in", "www.aprajitaretails.in", "aprajitaretails.store", "www.aprajitaretails.store",  ]
# Add here your deployment HOSTS
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:5085",
    "http://127.0.0.1:8000",
    "http://127.0.0.1:5085",
   # f"http://{APP_DOMAIN}",
   # f"https://{APP_DOMAIN}",
    "https://*.deploypro.dev",
    'http://localhost:85',
    'http://152.67.78.183:80',
    'http://localhost:80',
    'http://127.0.01:80',
    'http://127.0.01',
    'http://127.0.01:8000',
    'http://127.0.01:3000',
    'http://localhost:3000',
    'http://localhost:8000',
    'http://152.67.78.183',
    'http://152.67.78.183:8000',
    'http://152.67.78.183:80',
    'http://aprajitaretails.in'
    'http://www.aprajitaretails.in'
    'http://aprajitaretails.in:80'
    'http://aprajitaretails.in:8000'
    'http://www.aprajitaretails.in:80'
    'http://www.aprajitaretails.in:8000'
    'http://aprajitaretails.store',
    'http://www.aprajitaretails.store',
    'http://www.aprajitaretails.store:80',
    'http://www.aprajitaretails.store:8000',
    'http://aprajitaretails.store:8000',
    'http://152.67.78.183:8000',
     
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'oauth2_provider',
    'django_dyn_api',       
    'rest_framework',
    'django_api_gen',
    'rest_framework.authtoken', 
    'ui',
    'core',
    'home',
    'dbs',
    'hrms',
    'django_toggle_switch_widget',
    'widget_tweaks'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'aprajitaretails.urls'
SELECTED_UI_TEMPLATE=r"templates"
HOME_TEMPLATES = os.path.join(BASE_DIR, SELECTED_UI_TEMPLATE)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [HOME_TEMPLATES],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'aprajitaretails.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

TEMPLATE_STRING_IF_INVALID = ""
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_REDIRECT_URL = "/"
#EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = os.path.join(BASE_DIR, "mails/store/app-emails")
#BASE_DIR+"/mails/store/app-emails"  # change this to a proper location

# ##################################################################### #
#  CORS 
# ##################################################################### #

CORS_ALLOW_ALL_ORIGINS=True

# Load the default ones
CORS_ALLOWED_ORIGINS = ["http://localhost:3000",
    "http://127.0.0.1:3000","http://localhost:3000", "http://127.0.0.1:3000", "http://127.0.0.1","http://152.67.78.183:3000","http://152.67.78.183", " http://www.aprajitaretails.store" ,"http://aprajitaretails.in", "http://aprajitaretails.store:3000"]

# Leaded from Environment
CORS_ALLOWED_ORIGINS_ENV =None # env("CORS_ALLOWED_ORIGINS", default=None)

#if CORS_ALLOWED_ORIGINS_ENV:
#    CORS_ALLOWED_ORIGINS += CORS_ALLOWED_ORIGINS_ENV.split(' ')
 
SESSION_ENGINE='django.contrib.sessions.backends.cache'
SESSION_COOKIE_SECURE=False # For Production make is true


DYNAMIC_API = {
    # pattern: 
    # API_SLUG -> Import_PATH 
    #'books'  : "app1.models.Book",
    'clients': "dbs.models.clients.Client",
    'stores' : "dbs.models.clients.Store",
    'storegroups': "dbs.models.clients.StoreGroup",   
    
    #banking
    'banks': "dbs.models.banking.Bank",
    'banktransactions': "dbs.models.banking.BankTransaction",
    'bankaccountlists': "dbs.models.banking.BankAccountList",
    'chequebooks': "dbs.models.banking.ChequeBook",
    'chequeissued': "dbs.models.banking.ChequeIssued",
    'chequelogs': "dbs.models.banking.ChequeLog",
    'bankstatements': "dbs.models.banking.BankStatement",
    
    #accounting
    'party': "dbs.models.accounting.Party",
    'ledgergroups': "dbs.models.accounting.LedgerGroup",
    'ledgermaster': "dbs.models.accounting.LedgerMaster",
    'cashdetails': "dbs.models.accounting.CashDetail",   
    'duerecoveries': "dbs.models.accounting.DueRecovery",
    'transactionmodes': "dbs.models.accounting.TransactionMode",
    'posMachines': "dbs.models.accounting.EDCTerminal",
    
    #Coere
    'customers': "dbs.models.core.Customer",
    'contacts': "dbs.models.core.Contact",
    
    'employeeDetails':'dbs.models.hrms.EmployeeDetails',
    'monthlyattendaces': "dbs.models.hrms.Attendance",
    'salaryledgers': "dbs.models.hrms.SalaryLedger",
    'timesheets': "dbs.models.hrms.TimeSheet",
    'salaries': "dbs.models.hrms.Salary",
    'salaryPayments': "dbs.models.hrms.SalaryPayment",
    'payslips': "dbs.models.hrms.PaySlip",
    
    
}
API_GENERATOR = {
    # pattern: 
    # API_SLUG -> Import_PATH 
    #'books'  : "app1.models.Book",
    'clients': "dbs.models.clients.Client",
    'stores' : "dbs.models.clients.Store",
    'storegroups': "dbs.models.clients.StoreGroup",  
    
    #banking
    'bankaccounts': "dbs.models.banking.BankAccount",
    'vendorbankaccounts': "dbs.models.banking.VendorBankAccount",
    
    #Accounting
    'vouchers': "dbs.models.accounting.Voucher",
    'cashvouchers': "dbs.models.accounting.CashVoucher",
    'dailysales': "dbs.models.accounting.DailySale",
    
    'customerdues': "dbs.models.accounting.CustomerDue",
    'salesmen': "dbs.models.accounting.Salesman",
    
    #HRMS
    'employees': "dbs.models.hrms.Employee",
    'attendances': "dbs.models.hrms.Attendance",    
    
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication', 
        
    ],
}

from datetime import timedelta
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),
}

# Check for Uses
# REST_FRAMEWORK = {
#     "DEFAULT_AUTHENTICATION_CLASSES": ["rest_framework_simplejwt.authentication.JWTAuthentication"],
#     "DEFAULT_RENDERER_CLASSES": ["rest_framework.renderers.JSONRenderer"],
#     "TEST_REQUEST_DEFAULT_FORMAT": "json",
#     "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.DjangoModelPermissions",),
# }